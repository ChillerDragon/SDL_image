name: Build

on: [push, pull_request]

jobs:
  Build:
    name: ${{ matrix.platform.name }}
    runs-on: ${{ matrix.platform.os }}

    defaults:
      run:
        shell: ${{ matrix.platform.shell }}

    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: 'Windows (MSVC)'
            os: windows-latest
            shell: sh
            vendored: true
            msvc: 1
            cmake: '-DSDLIMAGE_BACKEND_STB=OFF -DPerl_ROOT=C:/Strawberry/perl/bin/ -GNinja -DCMAKE_POLICY_DEFAULT_CMP0141=NEW -DCMAKE_MSVC_DEBUG_INFORMATION_FORMAT=ProgramDatabase -DCMAKE_EXE_LINKER_FLAGS=-DEBUG -DCMAKE_SHARED_LINKER_FLAGS=-DEBUG'
          - name: Windows (mingw64)
            os: windows-latest
            shell: 'msys2 {0}'
            vendored: false
            msystem: mingw64
            msys-env: mingw-w64-x86_64
            cmake: '-DSDLIMAGE_BACKEND_STB=OFF -DSDLIMAGE_BACKEND_WIC=OFF  -DSDLIMAGE_AVIF=ON -G "Ninja Multi-Config"'
          - name: Linux
            os: ubuntu-latest
            shell: sh
            vendored: false
            cmake: '-GNinja'
          - name: Macos
            os: macos-latest
            shell: sh
            vendored: false
            cmake: '-GNinja'
    steps:

    - uses: ilammy/msvc-dev-cmd@v1
      if: ${{ matrix.platform.msvc }}
      with:
        arch: x64
    - name: Set up MSYS2
      if: ${{ contains(matrix.platform.shell, 'msys2') }}
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.platform.msystem }}
        path-type: inherit
        install: >-
          ${{ matrix.platform.msys-env }}-cmake
          ${{ matrix.platform.msys-env }}-gcc
          ${{ matrix.platform.msys-env }}-ninja
          ${{ matrix.platform.msys-env }}-perl
          ${{ matrix.platform.msys-env }}-pkg-config
          ${{ matrix.platform.msys-env }}-nasm
          ${{ matrix.platform.msys-env }}-libavif
          ${{ matrix.platform.msys-env }}-libjpeg-turbo
          ${{ matrix.platform.msys-env }}-libjxl
          ${{ matrix.platform.msys-env }}-libpng
          ${{ matrix.platform.msys-env }}-libtiff
          ${{ matrix.platform.msys-env }}-libwebp
          ${{ matrix.platform.msys-env }}-zlib
    - name: Install Ninja
      uses: aseprite/get-ninja@main
      if: ${{ !contains(matrix.platform.shell, 'msys2') }}
    - name: Set up SDL
      id: sdl
      uses: libsdl-org/setup-sdl@main
      with:
        cmake-generator: Ninja
        version: 3-head
        sdl-test: true
        shell: ${{ matrix.platform.shell }}
    - name: Set up Macos dependencies
      if: ${{ runner.os == 'macOS' && !matrix.platform.vendored }}
      run: |
        brew install \
          jpeg-xl \
          libavif \
          webp \
          ${NULL+}
    - name: Set up Linux dependencies
      if: ${{ runner.os == 'Linux' && !matrix.platform.vendored }}
      run: |
        sudo apt-get update
        sudo apt-get -y install \
          libavif-dev \
          libjpeg-dev \
          libpng-dev \
          libtiff-dev \
          libwebp-dev \
          zlib1g-dev \
          ${NULL+}
    - name: Set up NASM
      uses: ilammy/setup-nasm@v1
      if: ${{ matrix.platform.vendored && !contains(matrix.platform.shell, 'msys2') }}

    - uses: actions/checkout@v4
      with:
        submodules: ${{ matrix.platform.vendored && 'recursive' }}

    - name: Configure (CMake)
      run: |
        export CMAKE_CONFIGURATION_TYPES=Release
        cmake -B build \
          -DCMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE=$PWD/build \
          -DCMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE=$PWD/build \
          ${{ matrix.platform.cmake }}
    - name: Build (CMake)
      id: build
      run: cmake --build build/ --config Release --parallel --verbose
